<form
  id="create-poll-form"
  action="http://localhost:3000/api/surveys/create"
  method="post"
>
  <div class="form-wrap">
    <label for="question">Question</label>
    <input type="text" id="question" name="question" required />
  </div>
  <div class="form-wrap">
    <label for="option1">Option 1</label>
    <input type="text" id="option1" name="option1" required />
    <label for="option2">Option 2</label>
    <input type="text" id="option2" name="option2" required />
    <button type="submit">Create Poll</button>
  </div>
</form>

<div id="poll-results-container" style="display:none;">
  <h3 id="poll-question"></h3>
  <canvas id="poll-chart"></canvas>
  <div id="vote-buttons"></div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  import Chart from "chart.js/auto";
  import { BarController } from "chart.js/auto";

  interface PollData {
    question: string;
    options: string[];
  }

  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("create-poll-form") as HTMLFormElement;
    const pollResultsContainer = document.getElementById(
      "poll-results-container",
    ) as HTMLDivElement;
    const pollQuestion = document.getElementById(
      "poll-question",
    ) as HTMLHeadingElement;
    const voteButtonsContainer = document.getElementById(
      "vote-buttons",
    ) as HTMLDivElement;
    const ctx = (
      document.getElementById("poll-chart") as HTMLCanvasElement
    ).getContext("2d");

    let options = [];
    let votes = [10, 5];
    let chart: Chart | undefined;

    Chart.register(BarController as typeof BarController);

    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      const option1 = (document.getElementById("option1") as HTMLInputElement)
        .value;
      const option2 = (document.getElementById("option2") as HTMLInputElement)
        .value;
      options.push(option1, option2);

      const data = {
        question: form.question.value,
        options: options,
      };

      try {
        const response = await fetch(form.action, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(data),
          credentials: "include",
        });

        const result = await response.json();

        if (response.ok) {
          alert("Poll created successfully!");
          showPollResults(result);
        } else {
          alert(`Error: ${result.message}`);
        }
      } catch (error) {
        console.error("Error:", error);
      }
    });

    function showPollResults(data: PollData): void {
      pollResultsContainer.style.display = "block";
      pollQuestion.textContent = data.question;

      voteButtonsContainer.innerHTML = "";
      data.options.forEach((option, index) => {
        const button = document.createElement("button");
        button.textContent = option;
        button.onclick = () => vote(index);
        voteButtonsContainer.appendChild(button);
      });

      if (chart) {
        chart.destroy();
      }

      chart = new Chart(ctx, {
        type: "bar",
        data: {
          labels: data.options,
          datasets: [
            {
              label: "Votes",
              data: votes,
              backgroundColor: ["#4caf50", "#ff9800"],
              borderColor: ["#388e3c", "#f57c00"],
              borderWidth: 1,
            },
          ],
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true,
            },
          },
        },
      });
    }

    function vote(optionIndex: number) {
      votes[optionIndex] += 1;
      updateChart();
    }

    function updateChart() {
      if (chart) {
        chart.data.datasets[0].data = votes;
        chart.update();
      }
    }
  });
</script>
