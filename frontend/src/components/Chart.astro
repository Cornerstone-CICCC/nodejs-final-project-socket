---
import type { ChartType } from "chart.js";

interface Props {
  type: ChartType;
  labels: string[];
  datasets: Array<{
    label: string;
    data: number[];
    backgroundColor: string;
    borderColor: string;
    fill?: boolean;
  }>;
}

const { type = "bar", labels = [], datasets = [] } = Astro.props;
---

<chart-js
  data-type={type}
  data-labels={JSON.stringify(labels)}
  data-datasets={JSON.stringify(datasets)}
>
  <div class="relative">
    <canvas></canvas>
  </div>
</chart-js>

<script>
  import type { ChartType } from "chart.js";
  import Chart from "chart.js/auto";

  class ChartElement extends HTMLElement {
    constructor() {
      super();
      const ctx = this.querySelector("canvas") as HTMLCanvasElement;
      const type = this.dataset.type as ChartType;
      const labels = JSON.parse(this.dataset.labels!);
      const datasets = JSON.parse(this.dataset.datasets!);
      new Chart(ctx, {
        type,
        data: {
          labels,
          datasets,
        },
        options: {
          responsive: true,
        },
      });
    }
  }

  customElements.define("chart-js", ChartElement);
</script>
